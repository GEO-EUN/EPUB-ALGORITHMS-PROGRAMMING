<?xml version="1.0" encoding="UTF-8"?>
<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="ko">
<head>
<title>문제 해결의 절차 – 알고리즘 설계</title>
<link rel="stylesheet" type="text/css" href="../css/style.css"/>
</head>
<body>
  <nav class="main-nav">
    <ul class="main-menu">
      <li class="dropdown">
        <a href="page1.xhtml">학습 시작하기</a>
        <ul class="dropdown-list">
          <li><a href="index.xhtml">표지 돌아가기</a></li>
          <li><a href="../nav.xhtml">목차 보기</a></li>
          <li><a href="page1.xhtml">문제 해결의 첫걸음</a></li>
          <li><a href="page2.xhtml">알고리즘 설계</a></li>
          <li><a href="page3.xhtml">프로그래밍 기초</a></li>
          <li><a href="page4.xhtml">변수와 제어 구조</a></li>
          <li><a href="page5.xhtml">실생활 적용</a></li>
        </ul>
      </li>
      <li class="dropdown">
        <a href="sequential.xhtml">실습하기</a>
        <ul class="dropdown-list">
          <li><a href="sequential.xhtml">순차 구조</a></li>
          <li><a href="repetition.xhtml">반복 구조</a></li>
          <li><a href="selection.xhtml">선택 구조</a></li>
          <li><a href="qna.xhtml">질문과 답변</a></li>
        </ul>
      </li>
      <li class="dropdown">
        <a href="programing.xhtml">Flip-Audio Book</a>
        <ul class="dropdown-list">
          <li><a href="programing.xhtml">프로그래밍 과정<br/>알아보기</a></li>
          <li><a href="appendix.xhtml">부록 보기</a></li>
        </ul>
      </li>
    </ul>
  </nav>
  <div class="section-title-center">
    <h2 class="title-with-icon page2-title"><img src="../images/apple.svg" alt="사과 아이콘" style="vertical-align:middle;margin-right:0.02em;width:1.6em;height:1.6em;border:none;outline:none;"/>알고리즘 설계</h2>
  </div>
  <p>추상화를 통해 문제의 핵심 요소를 파악했다면, 이제 문제를 해결하기 위한 구체적인 방법과 절차를 설계해야 합니다. 이 절차를 알고리즘이라고 부릅니다.</p>
  <img src="../images/algorithm_design.svg" alt="알고리즘 설계 과정" class="illustration" />
  <ul>
    <li><b>알고리즘이란</b><div class="subtitle-gap"></div>
      추상화 과정을 거쳐 추출한 핵심 요소를 이용하여 문제를 현재 상태에서 목표 상태로 변화시키기 위해 수행해야 할 작업들의 절차입니다. 이는 마치 빨간색 막대 퍼즐을 옮기는 과정처럼, 현재 막힌 상태(현재 상태)에서 장애물을 옮겨 출구로 이동하는 상태(목표 상태)로 변화시키는 일련의 과정입니다.
    </li>
    <li><b>알고리즘의 요건</b><div class="subtitle-gap"></div>
      <ul>
        <li>입력과 출력: 입력을 받아 계산하고 결과를 출력해야 합니다.</li>
        <li>명확성: 수행하는 명령이 모호하지 않고 명확하게 제시되어야 합니다.</li>
        <li>유한성: 알고리즘은 반드시 시작과 종료가 있어야 합니다.</li>
        <li>수행 가능성: 모든 명령이 논리적으로 수행 가능해야 합니다.</li>
      </ul>
    </li>
    <li><b>좋은 알고리즘</b><div class="subtitle-gap"></div>
      같은 문제라도 여러 가지 알고리즘이 존재할 수 있으며, 문제를 효율적으로 해결해 주는 알고리즘이 좋은 알고리즘입니다. 효율성은 문제 상황과 목적에 따라 판단 기준이 달라질 수 있습니다.
      <ul>
        <li>알고리즘 분석 기준: 정확성, 단순성, 수행 시간(시간 복잡도), 기억 장소 사용량(공간 복잡도) 등을 기준으로 분석할 수 있습니다.</li>
      </ul>
    </li>
  </ul>
  <p>알고리즘은 여러 가지 방법으로 표현할 수 있으며, 명확하게 표현하는 것이 중요합니다.</p>
  <ul>
    <li><b>알고리즘 표현 방법</b><div class="subtitle-gap"></div>
      <ul>
        <li>자연어: 일상생활에서 사용하는 언어로, 이해하기 쉽지만 의미가 모호하게 전달될 수 있어 가능한 구체적이고 명확하게 표현해야 합니다.</li>
        <li>의사 코드(Pseudo Code): 자연어를 프로그래밍 언어처럼 사용하여 알고리즘을 표현하는 방식으로, 자연어보다 명확하지만 프로그래밍 언어에 익숙해야 이해하기 쉽습니다.</li>
        <li>순서도(Flowchart): 미리 약속된 기호(ISO 국제 표준)를 사용하여 알고리즘을 표현하는 방식입니다. 문제 해결 과정과 흐름을 한눈에 파악하기 쉬워 알고리즘 설계에 많이 사용되지만, 기호와 사용법을 익혀야 하는 부담이 있습니다.</li>
      </ul>
    </li>
  </ul>
</body>
</html> 